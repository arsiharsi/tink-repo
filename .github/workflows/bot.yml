on:
  push:
    paths:
      - 'bot/**'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: bot_image


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Move to Upper Directory
        run: cd ..
      - name: Move to Upper Directory#2
        run: cd ..
      - name: Build JAR
        run: mvn -DskipTests=true package -pl bot -am
      - name: Build Image
        run: docker build -q -t bot_image . -f bot.Dockerfile && docker run bot_image
  push-image:
    runs-on: ubuntu-latest
    steps:
      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin
      - name: Push image
        run: |
          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME
          
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          
          # Use Docker `latest` tag convention
          [ "$VERSION" == "main" ] && VERSION=latest
          
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
          docker push ghcr.io/arsiharsi/$IMAGE_NAME


